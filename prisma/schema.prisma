// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamptz()
  updated_at DateTime  @updatedAt @db.Timestamptz()
  email      String    @unique
  password   String
  role       Role      @default(USER)
  username   String?
  phone      String?
  salt       String
  ip         String?   @db.Inet
  uid        String    @unique @default(uuid())
  avatar     String?
  token      String?
  token_exp  DateTime?
}

model Bookings {
  id            Int      @id @default(autoincrement())
  created_at    DateTime @default(now()) @db.Timestamptz()
  updated_at    DateTime @updatedAt @db.Timestamptz()
  startDate     DateTime @db.Date()
  endDate       DateTime @db.Date()
  numNights     Int
  numGuests     Int
  cabinPrice    Float
  extrasPrice   Float
  discountPrice Float    @default(0)
  totalPrice    Float
  status        String   @default("unconfirmed")
  hasBreakfast  Boolean
  isPaid        Boolean  @default(false)
  cabinId       Int
  cabin         Cabins?  @relation(fields: [cabinId], references: [id], onDelete: Cascade)
  guestId       String
  guest         Guests   @relation(fields: [guestId], references: [uid])
}

model Cabins {
  id           Int        @id @default(autoincrement())
  created_at   DateTime   @default(now()) @db.Timestamptz()
  updated_at   DateTime   @updatedAt @db.Timestamptz()
  name         String
  bedroom      Int
  regularPrice Float
  discount     Float?
  description  String?
  image        String
  location     String?
  Bookings     Bookings[]
  images       Json?
  Reviews      Reviews[]
}

model Settings {
  id                  Int      @id @default(autoincrement())
  created_at          DateTime @default(now()) @db.Timestamptz()
  minBookingLength    Int      @default(1)
  maxBookingLength    Int      @default(30)
  maxGuestsPerBooking Int      @default(10)
  breakfastPrice      Float    @default(20)
}

model Guests {
  id         Int        @id @default(autoincrement())
  uid        String     @unique @default(uuid())
  created_at DateTime   @default(now()) @db.Timestamptz()
  updated_at DateTime   @updatedAt @db.Timestamptz()
  fullName   String
  email      String     @unique
  phone      String?
  password   String
  salt       String
  ip         String?    @db.Inet
  Bookings   Bookings[]
  Reviews    Reviews[]
}

model Reviews {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @updatedAt @db.Timestamptz()
  rating     Int
  comment    String?
  guestId    String
  guest      Guests   @relation(fields: [guestId], references: [uid])
  cabinId    Int
  cabin      Cabins   @relation(fields: [cabinId], references: [id], onDelete: Cascade)
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

enum Role {
  USER
  ADMIN
}
